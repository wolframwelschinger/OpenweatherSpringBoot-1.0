package de.ww.openweather.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import de.ww.openweather.utils.OpenWeatherMapUtil;
import de.ww.openweather.utils.WetterDTO;
import de.ww.openweather.utils.persistence.Wetteraufzeichnung;
import de.ww.openweather.utils.repositories.WetteraufzeichnungRepository;

@Controller
@RequestMapping("wetter")
public class WetterController {

	static final String url_London_uk = "http://api.openweathermap.org/data/2.5/find?q=London,SW5&units=metric&type=accurate&mode=json&APPID=a69fc6770115d5a82cd0d37e359ad4bf&lang=de";

	static final String url_Berlin_Pankow = "http://api.openweathermap.org/data/2.5/find?q=Berlin,13187&units=metric&type=accurate&mode=json&APPID=a69fc6770115d5a82cd0d37e359ad4bf&lang=de";

	static final String url_Palma_de_Mallorca = "http://api.openweathermap.org/data/2.5/find?q=Palma%20de%20Mallorca&units=metric&type=accurate&mode=json&APPID=a69fc6770115d5a82cd0d37e359ad4bf&lang=de";

	static final String url_Alcudia = "http://api.openweathermap.org/data/2.5/find?q=Alcudia&units=metric&type=accurate&mode=json&APPID=a69fc6770115d5a82cd0d37e359ad4bf&lang=de";
	
	@Autowired
	private WetteraufzeichnungRepository wetteraufzeichnungRepo;
	
	/**
	 * Gibt das Wetter in Berlin Pankow als HTML-Response zur&uuml;ck
	 * http://127.0.0.1:9999/wetter/html/berlin
	 * @return das Wetter in Berlin Pankow als HTML-Response
	 */	
	@RequestMapping(value="/html/berlin_pankow", method = RequestMethod.GET, produces = "text/html")
	public @ResponseBody String getWetterBerlin() {
		WetterDTO dtoPankow = OpenWeatherMapUtil.getWetter(url_Berlin_Pankow);
		
		Wetteraufzeichnung wetter = new Wetteraufzeichnung();
		wetter.setOrt(dtoPankow.getOrt());
		wetter.setLand(dtoPankow.getLand());
		wetter.setGeoBreite(dtoPankow.getGeoBreite());
		wetter.setGeoLaenge(dtoPankow.getGeoLaenge());
		wetter.setTemperatur(dtoPankow.getTemperatur());
		wetter.setTemperatur_min(dtoPankow.getTemperatur_min());
		wetter.setTemperatur_max(dtoPankow.getTemperatur_max());
		wetter.setLuftDruck(dtoPankow.getLuftDruck());
		wetter.setLuftFeuchtigkeit(dtoPankow.getLuftFeuchtigkeit());
		wetter.setWindGeschwindigkeit(dtoPankow.getWindGeschwindigkeit());
		wetter.setWindRichtung(dtoPankow.getWindRichtung());
		wetter.setWolken(dtoPankow.getWolken());
		wetter.setZeitStempel(dtoPankow.getZeitStempel());
		wetter.setZeitString(dtoPankow.getZeitString());
		wetteraufzeichnungRepo.save(wetter);
		
		return dtoPankow.getHtml();
	}
	
	/**
	 * Gibt das Wetter in Palma als HTML-Response zur&uuml;ck
	 * http://127.0.0.1:9999/wetter/html/palma
	 * @return das Wetter in Palma als HTML-Response
	 */
	@RequestMapping(value="/html/palma", method = RequestMethod.GET, produces = "text/html")
	public @ResponseBody String getWetterPalma() {
		WetterDTO dtoPalma = OpenWeatherMapUtil.getWetter(url_Palma_de_Mallorca);
		
		Wetteraufzeichnung wetter = new Wetteraufzeichnung();
		wetter.setOrt(dtoPalma.getOrt());
		wetter.setLand(dtoPalma.getLand());
		wetter.setGeoBreite(dtoPalma.getGeoBreite());
		wetter.setGeoLaenge(dtoPalma.getGeoLaenge());
		wetter.setTemperatur(dtoPalma.getTemperatur());
		wetter.setTemperatur_min(dtoPalma.getTemperatur_min());
		wetter.setTemperatur_max(dtoPalma.getTemperatur_max());
		wetter.setLuftDruck(dtoPalma.getLuftDruck());
		wetter.setLuftFeuchtigkeit(dtoPalma.getLuftFeuchtigkeit());
		wetter.setWindGeschwindigkeit(dtoPalma.getWindGeschwindigkeit());
		wetter.setWindRichtung(dtoPalma.getWindRichtung());
		wetter.setWolken(dtoPalma.getWolken());
		wetter.setZeitStempel(dtoPalma.getZeitStempel());
		wetter.setZeitString(dtoPalma.getZeitString());
		wetteraufzeichnungRepo.save(wetter);
		
		return dtoPalma.getHtml();
	}
}
