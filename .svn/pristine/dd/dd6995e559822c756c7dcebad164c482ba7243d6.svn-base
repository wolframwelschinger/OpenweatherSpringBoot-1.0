package de.ww.openweather.controllers;

import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import de.ww.openweather.utils.Constants;
import de.ww.openweather.utils.OpenWeatherMapUtil;
import de.ww.openweather.utils.WetterBeschreibung;
import de.ww.openweather.utils.WetterDTO;
import de.ww.openweather.utils.WettervorhersageDTO;
import de.ww.openweather.utils.persistence.Ort;
import de.ww.openweather.utils.repositories.OrtRepository;

@Controller
@RequestMapping("ort")
public class OrtController {

	// Vorhersage
	//http://api.openweathermap.org/data/2.5/forecast?zip=13187,de&APPID=a69fc6770115d5a82cd0d37e359ad4bf&lang=de&units=metric
	//http://api.openweathermap.org/data/2.5/forecast?zip=13187,de&APPID=a69fc6770115d5a82cd0d37e359ad4bf&lang=de&units=metric&mode=json
	
	@Autowired
	private OrtRepository ortRepo;
	
	private Logger log = LogManager.getLogger(this.getClass().getName());
	
	/**
	 * http://127.0.0.1:9999/wetter/all
	 * @return List mit Orten, von denen Wetterdaten abgerufen werden soll
	 */
	@RequestMapping(value="/all", method = RequestMethod.GET, produces = "application/json")
	public @ResponseBody List<Ort> getWetterdatenAll() {
		log.debug("getWetterdatenAll (URL: /wetter/all) ...");
		List<Ort> orte = (List<Ort>) ortRepo.findAll();
		return orte;
	}
	
	/**
	 * http://127.0.0.1:9999/ort/byId/1
	 * @param id PK des Ores
	 * @return Ortdatensatz mit PK=1
	 */
	@RequestMapping(value="/byId/{id}", method = RequestMethod.GET, produces = "application/json")
	public @ResponseBody Ort getWetterdatenById(@PathVariable Long id) {
		Ort ort = ortRepo.findOne(id);
		return ort;
	}	
	
	/**
	 * Gibt den Ortdatensatz f&uuml;r den Ort <i>ort</i> als JSON-Response zur&uuml;ck
	 * http://127.0.0.1:9999/#!/ort/byOrt/Berlin
	 * http://127.0.0.1:9999/#!/ort/byOrt/Palma
	 * @param ort Ort
	 * @return der Ortdatensatz als JSON-Objekt
	 */	
	@RequestMapping(value="/byOrt/{ort}", method = RequestMethod.GET, produces = "application/json")
	public @ResponseBody WetterDTO getWetterByOrt(@PathVariable String ort) {
		log.debug("ortByOrt: " + ort);
		WetterDTO dto = null;
		dto = (WetterDTO) ortRepo.findByOrt(ort);
		return dto;
	}		
	

	
}
