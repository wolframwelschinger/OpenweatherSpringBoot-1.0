package de.ww.openweather.controllers;

import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import de.ww.openweather.utils.persistence.Ort;
import de.ww.openweather.utils.repositories.OrtRepository;

@RestController
@RequestMapping("/restservices")
public class OrtRestController {

	@Autowired
	private OrtRepository ortRepo;
	
	private Logger log = LogManager.getLogger(this.getClass().getName());
	
	/**
	 * http://127.0.0.1:9999/ort/all
	 * @return List mit Orten, von denen Wetterdaten abgerufen werden soll
	 */
	@RequestMapping(value="/ort/all")
	public @ResponseBody List<Ort> getListAllOrt() {
		log.debug("getWetterdatenAll (URL: /wetter/all) ...");
		List<Ort> orte = (List<Ort>) ortRepo.findAll();
		return orte;
	}
	
	/**
	 * http://127.0.0.1:9999/ort/byId/1
	 * @param id PK des Ores
	 * @return Ortdatensatz mit PK=1
	 */
	@RequestMapping(value="/ort/{id}")
	public @ResponseBody Ort getWetterdatenById(@PathVariable Long id) {
		log.debug("Ort-ID: " + id);
		Ort ort = ortRepo.findOne(id);
		return ort;
	}	
	
	/**
	 * Speichert einen Ort-Datensatz
	 * @param ort Ort-Objekt
	 * @return Gespeichertes Ort-Objekt
	 */
	@RequestMapping(value="/ort", method = RequestMethod.POST)
	public Ort save(@RequestBody Ort ort) {
		log.debug("save - Ort: " + ort.getOrt());
		ortRepo.save(ort);
		return ort;
	}
	
	/**
	 * L&ouml;scht einen Ort-Datensatz
	 * @param id PK des Datensatzes
	 * @return DeleteResult-Objekt welches im Attribut id den PK enth&auml;lt
	 */
	@RequestMapping(value = "/ort/{id}", method = RequestMethod.DELETE)
	public DeleteResult delete(@PathVariable Long id) {
		log.debug("delete - zu loeschende ID: " + id);
		ortRepo.delete(id);
		return new DeleteResult(id);
	} 	

}
